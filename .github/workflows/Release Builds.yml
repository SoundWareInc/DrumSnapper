name: CI-Projucer

on:
  push:
    branches:
    - main
    - develop

env:
  PLUGIN_NAME: DrumSnapper
  PLUGIN_ID: io.soundware.DrumSnapper
  
  workflow_dispatch:
  
jobs:
  build_and_test:
    if: contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: ${{ matrix.os }} Build plugin with Projucer on
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      fail-fast: false # show all errors for each platform (vs. cancel jobs on error)
      matrix:
        include:
          - os: macos-latest
            jucer: "lib/JUCE/extras/Projucer/Builds/MacOSX/build/Debug/Projucer.app/Contents/MacOS/Projucer"
            clap_gen: "Xcode"
          - os: windows-2022
            jucer: "lib/JUCE/extras/Projucer/Builds/VisualStudio2022/x64/Debug/App/Projucer.exe"
            clap_gen: "Visual Studio 19 2022"
    
    steps:

    - name: Set up Xcode (MacOS)
      if: runner.os == 'MacOS'
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Add msbuild to PATH (Windows)
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v1.0.3

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        submodules: recursive
        
    - name: Build Projucer (MacOS)
      if: runner.os == 'MacOS'
      shell: bash
      run: xcodebuild -project Projucer.xcodeproj -jobs 4 | xcpretty
      working-directory: lib/JUCE/extras/Projucer/Builds/MacOSX

    - name: Build Projucer (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: msbuild.exe -v:normal -m:4 Projucer.sln
      working-directory: lib/JUCE/extras/Projucer/Builds/VisualStudio2022
      
    - name: Resave jucer
      shell: bash
      run: $PROJUCER --resave ${{ env.PLUGIN_NAME }}.jucer
      env:
        PROJUCER: ${{ matrix.jucer }}

    - name: Build Plugin (MacOS)
      if: runner.os == 'MacOS'
      shell: bash
      run: |
          xcodebuild -project ${{env.PLUGIN_NAME}}.xcodeproj -configuration "Release" | xcpretty
      working-directory: Builds/MacOSX

    - name: Build Plugin (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: |
          msbuild.exe ${{env.PLUGIN_NAME}}.sln /property:Configuration="Release32Bit" /property:Platform="Win32"
          msbuild.exe ${{env.PLUGIN_NAME}}.sln /property:Configuration="Release64Bit" /property:Platform="x64"
      working-directory: Builds/VisualStudio2022
      
    - name: Install the Apple Developer certificate (MacOS)
      if: runner.os == 'MacOS'
      uses: apple-actions/import-codesign-certs@v1
      with:
        p12-file-base64: ${{ secrets.DEVELOPER_CERT_MAC_APPLICATION }}
        p12-password: ${{ secrets.P12_PASSWORD }}
        keychain: signing-keychain-application
        
    - name: Code Sign Binaries (MacOS)
      if: runner.os == 'MacOS'
      shell: bash
      run: |
         codesign -vvv --deep --strict --force --options=runtime --timestamp --verify --verbose --sign "Developer ID Application: Tize Music, Inc. (97HU8F9WC6)" ${{env.PLUGIN_NAME}}.app/Contents/MacOS/${{env.PLUGIN_NAME}}
         codesign -vvv --deep --strict --force --options=runtime --timestamp --verify --verbose --sign "Developer ID Application: Tize Music, Inc. (97HU8F9WC6)" ${{env.PLUGIN_NAME}}.component/Contents/MacOS/${{env.PLUGIN_NAME}}
         codesign -vvv --deep --strict --force --options=runtime --timestamp --verify --verbose --sign "Developer ID Application: Tize Music, Inc. (97HU8F9WC6)" ${{env.PLUGIN_NAME}}.vst/Contents/MacOS/${{env.PLUGIN_NAME}}
         codesign -vvv --deep --strict --force --options=runtime --timestamp --verify --verbose --sign "Developer ID Application: Tize Music, Inc. (97HU8F9WC6)" ${{env.PLUGIN_NAME}}.vst3/Contents/MacOS/${{env.PLUGIN_NAME}}
      working-directory: Builds/MacOSX/build/Release
                
    - name: Update Homebrew (MacOS)
      if: runner.os == 'MacOS'
      shell: bash
      run: brew update

    - name: Install Packages (MacOS)
      if: runner.os == 'MacOS'
      shell: bash
      run: brew install --cask packages

    - name: Build Installer (MacOS)
      if: runner.os == 'MacOS'
      shell: bash
      run: packagesbuild Mac\ Installer.pkgproj

    - name: Install the Apple Installer certificate (MacOS)
      if: runner.os == 'MacOS'
      uses: apple-actions/import-codesign-certs@v1
      with:
        p12-file-base64: ${{ secrets.DEVELOPER_CERT_MAC_INSTALLER }}
        p12-password: ${{ secrets.P12_PASSWORD }}
        keychain: signing-keychain-installer

    - name: Sign Installer (MacOS)
      if: runner.os == 'MacOS'
      shell: bash
      run: |
         productsign --sign "Developer ID Installer: Tize Music, Inc. (97HU8F9WC6)" Builds/${{env.PLUGIN_NAME}}\ Mac\ Installer.pkg Builds/${{env.PLUGIN_NAME}}\ Mac\ Installer_signed.pkg

    - name: Notarize Release Build PKG (MacOS)
      if: runner.os == 'MacOS'
      uses: GuillaumeFalourd/notary-tools@v1
      with:
          product_path: Builds/${{env.PLUGIN_NAME}}\ Mac\ Installer_signed.pkg
          apple_id: ${{ secrets.APPSTORE_USERNAME }}
          password: ${{ secrets.APPSTORE_PASSWORD }}
          team_id: '97HU8F9WC6'
          xcode_path: '/Applications/Xcode.app'
          
    - name: Build Installer (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: |
        "C:\Program Files (x86)\Inno Setup 6\ISCC" "Win Installer.iss"

    - name: Setup BackBlaze
      uses: wilsonzlin/setup-b2@v3

    - name: Upload To BackBlaze (MacOS - Develop)
      if: runner.os == 'MacOS' && github.ref == 'refs/heads/develop'
      run: |
          b2 authorize-account 00259008f685f680000000002 K002ifUOWPi6S+5FVS1i4Dwp9oErZkQ
          b2 upload-file soundwarereleases 'Builds/${{env.PLUGIN_NAME}} Mac Installer_signed.pkg' '${{env.PLUGIN_NAME}} Mac Installer_beta_signed.pkg'

    - name: Upload To BackBlaze (MacOS - Main)
      if: runner.os == 'MacOS' && github.ref == 'refs/heads/main'
      run: |
          b2 authorize-account 00259008f685f680000000002 K002ifUOWPi6S+5FVS1i4Dwp9oErZkQ
          b2 upload-file soundwarereleases 'Builds/${{env.PLUGIN_NAME}} Mac Installer_signed.pkg' '${{env.PLUGIN_NAME}} Mac Installer_signed.pkg'

    - name: Upload To BackBlaze (Windows - Develop)
      if: runner.os == 'Windows' && github.ref == 'refs/heads/develop'
      run: |
          b2 authorize-account 00259008f685f680000000002 K002ifUOWPi6S+5FVS1i4Dwp9oErZkQ
          b2 upload-file soundwarereleases 'Builds/${{env.PLUGIN_NAME}} Win Installer.exe' '${{env.PLUGIN_NAME}} Win Installer_beta.exe'
          
    - name: Upload To BackBlaze (Windows - Main)
      if: runner.os == 'Windows' && github.ref == 'refs/heads/main'
      run: |
          b2 authorize-account 00259008f685f680000000002 K002ifUOWPi6S+5FVS1i4Dwp9oErZkQ
          b2 upload-file soundwarereleases 'Builds/${{env.PLUGIN_NAME}} Win Installer.exe' '${{env.PLUGIN_NAME}} Win Installer.exe'
